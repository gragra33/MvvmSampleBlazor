@page "/ObservableObject"
@inherits MvvmComponentBase<ObservableObjectPageViewModel>

@if (ViewModel?.Texts is null || !ViewModel.Texts.Any())
{
    <p>Loading...</p>
}
else
{
    @ViewModel.Texts["ObservableObject"].MarkDownToMarkUp()
    @ViewModel.Texts["How it works"].MarkDownToMarkUp()
    @ViewModel.Texts["Simple property"].MarkDownToMarkUp()

    <TabControl>
        <Panels>
            <TabPanel Title="Sample">
                <div class="mb-3">
                    <input @bind-value=ViewModel.Name @bind-value:event="oninput"
                           type="text" class="form-control" placeholder="Type here to update the text below">
                    <p class="sample--output">@ViewModel.Name</p>
                </div>
            </TabPanel>
            <TabPanel Title="Razor">
                <pre>
                    @StaticStrings.ObservableObject.Sample1Razor
                </pre>
            </TabPanel>
            <TabPanel Title="C#">
                <pre>
                    @StaticStrings.ObservableObject.Sample1Csharp
                    </pre>
            </TabPanel>
        </Panels>
    </TabControl>

    @ViewModel.Texts["Wrapping a non-observable model"].MarkDownToMarkUp()
    @ViewModel.Texts["Handling `Task<T>` properties"].MarkDownToMarkUp()

    <TabControl>
        <Panels>
            <TabPanel Title="Sample">
                <div class="mb-3">
                    <button type="button"
                            class="btn btn-primary" @onclick="() => ViewModel.ReloadTaskCommand.Execute(null)">
                        Click me to load a Task to await
                    </button>
                    <p class="sample--output">@ViewModel.MyTask?.Status</p>
                </div>
            </TabPanel>
            <TabPanel Title="Razor">
                <pre>
                    @StaticStrings.ObservableObject.Sample2Razor
                </pre>
            </TabPanel>
            <TabPanel Title="C#">
                <pre>
                    @StaticStrings.ObservableObject.Sample2Csharp
                    </pre>
            </TabPanel>
        </Panels>
    </TabControl>
}

@code {

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            await ViewModel!.LoadDocsCommand.ExecuteAsync("ObservableObject");
    }

}