@page "/RelayCommand"
@inherits MvvmComponentBase<RelayCommandPageViewModel>

@if (ViewModel?.Texts is null || !ViewModel.Texts.Any())
{
    <p>Loading...</p>
}
else
{
    @ViewModel.Texts["RelayCommand and RelayCommand<T&gt;"].MarkDownToMarkUp()
    @ViewModel.Texts["How they work"].MarkDownToMarkUp()
    @ViewModel.Texts["Working with `ICommand`"].MarkDownToMarkUp()

    <TabControl>
        <Panels>
            <TabPanel Title="Sample">
                <div class="mb-3">
                    <p class="sample--output">@ViewModel.Counter</p>
                    <button type="button"
                            class="btn btn-primary" @onclick="() => ViewModel.IncrementCounterCommand.Execute(null)">
                        Click me!
                    </button>
                </div>
            </TabPanel>
            <TabPanel Title="Razor">
                    @StaticStrings.RelayCommand.sample1Razor.MarkDownToMarkUp()
            </TabPanel>
            <TabPanel Title="C#">
                    @StaticStrings.RelayCommand.sample1csharp.MarkDownToMarkUp()
            </TabPanel>
        </Panels>
    </TabControl>
}

@code {

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            await ViewModel!.LoadDocsCommand.ExecuteAsync("RelayCommand");
    }
}