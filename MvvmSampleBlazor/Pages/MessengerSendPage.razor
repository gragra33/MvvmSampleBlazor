@page "/MessengerSend"
@inherits MvvmComponentBase<MessengerSendPageViewModel>

@if (ViewModel?.Texts is null || !ViewModel.Texts.Any())
{
    <p>Loading...</p>
}
else
{
    @ViewModel.Texts["Sending and receiving messages"].MarkDownToMarkUp()

    <TabControl>
        <Panels>
            <TabPanel Title="Sample">
                <!--Sender module-->
                <div class="mb-3 shadow-none bg-light rounded">
                    <p class="sample--output">Status: @ViewModel.SenderViewModel.Username</p>
                    <button type="button"
                            class="btn btn-primary" @onclick="() => ViewModel.SenderViewModel.SendUserMessageCommand.Execute(null)">
                        Click me!
                    </button>
                </div>

                <!--Receiver module-->
                <div class="mb-3 shadow-none bg-light rounded">
                    <p class="sample--output">Status: @ViewModel.ReceiverViewModel.Username</p>
                </div>
            </TabPanel>
            <TabPanel Title="Razor">
                @StaticStrings.MessengerSend.sample1Razor.MarkDownToMarkUp()
            </TabPanel>
            <TabPanel Title="C#">
                @StaticStrings.MessengerSend.sample1csharp.MarkDownToMarkUp()
            </TabPanel>
        </Panels>
    </TabControl>
}

@code {

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await ViewModel!.LoadDocsCommand.ExecuteAsync("Messenger");
            ViewModel.ReceiverViewModel.IsActive = true; // enable
        }
    }
}